import{_ as i,o as p,c as l,U as t}from"./chunks/framework.97dce334.js";const m=JSON.parse('{"title":"TODO","description":"","frontmatter":{},"headers":[],"relativePath":"other/TODO.md","filePath":"other/TODO.md","lastUpdated":1692869883000}'),e={name:"other/TODO.md"},a=t('<h1 id="todo" tabindex="-1">TODO <a class="header-anchor" href="#todo" aria-label="Permalink to &quot;TODO&quot;">​</a></h1><ul><li><p>miniProgram</p></li><li><p>[ ] 生命周期</p></li><li><p>[ ] 常用 api</p></li><li><p>react</p></li><li><p>[ ] react 生命周期</p></li><li><p>[ ] react 新特性</p></li><li><p>[ ] umi</p></li><li><p>interview</p></li><li><p>[ ] reduce</p></li><li><p>[ ] 自己实现 promise</p></li><li><p>[ ] 不用 api 实现查询字符串每个字符出现的次数</p></li><li><p>[ ] 不用 api 实现查询字符串中某个字符所在的位置.</p></li><li><p>怎么优化网站</p></li><li><p>精灵图,矢量图,缩略图,base64 编码.</p></li><li><p>懒加载</p></li><li><p>减少请求</p></li><li><p>浏览器缓存</p><ul><li>强缓存</li><li>协商缓存(由后端控制)</li><li>h5 有 manifest 也可以缓存,但不常用</li></ul></li></ul><h2 id="_37-法则" tabindex="-1">37%法则 <a class="header-anchor" href="#_37-法则" aria-label="Permalink to &quot;37%法则&quot;">​</a></h2><p>&quot;37%法则&quot;的意思就是，寻找阶段进行到 37%就要停止。 100 个应聘者，先面试前 37 个，此后的面试只要遇到一个更优秀的，就立刻录取，不再继续面试了。换句话说，前 37 个面试者无论多么优秀，都不会录取，他们只是用来确定录取的标准。</p><p>如果最合适的候选者偏偏在前面 37%里面，那就只能错过了，作为&quot;寻找阶段&quot;不得不付出的成本。最终录取的将是不如前面候选人的次优选择。</p><p>这个法则很实用，日常生活中，只要符合&quot;寻找-决策过程&quot;的场景，都可以适用 37%法则。</p><p>（1）相亲时，假定有 10 个相亲对象，那么前 3 ～ 4 个可以作为寻找阶段，后面只要遇到一个比前面更好的人，就可以同意了。</p><p>（2）租房时，假定有一个月的找房子时间，那么 30 天的 37﹪也就是 11 天。在找了 11 天之后，你就要出手了。只要发现比先前更令人心动的房子，就不要犹豫，马上租下来。</p><p>（3）读书时，假定这本书有 100 页，如果读了 37 页，还没有发现感兴趣的内容，那就可以放弃了。</p><p>（4）一个 10 集的电视剧，第 4 集是最佳弃剧时间。</p><p>（5）一个 10 分钟的视频，看了 3 分 42 秒，如果还是觉得不好看，就可以关掉了。</p><p>（6）一个年轻人想在 18 岁到 24 岁，一共 7 年时间里找到人生方向，确定未来想做什么。那么，他有 2.59 年（7 * 0.37）的时间自由尝试。也就是说，到了大三下学期就应该初步定下自己的方向，后面除非遇到更有吸引力的事情，否则就不应该转换事业方向。</p>',12),o=[a];function r(s,_,c,n,d,u){return p(),l("div",null,o)}const O=i(e,[["render",r]]);export{m as __pageData,O as default};
