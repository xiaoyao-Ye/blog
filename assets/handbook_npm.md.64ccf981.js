import{_ as s,o as a,c as n,U as l}from"./chunks/framework.97dce334.js";const A=JSON.parse('{"title":"包管理","description":"","frontmatter":{},"headers":[],"relativePath":"handbook/npm.md","filePath":"handbook/npm.md","lastUpdated":1726819556000}'),p={name:"handbook/npm.md"},o=l(`<h1 id="包管理" tabindex="-1">包管理 <a class="header-anchor" href="#包管理" aria-label="Permalink to &quot;包管理&quot;">​</a></h1><h2 id="package-json" tabindex="-1">package.json <a class="header-anchor" href="#package-json" aria-label="Permalink to &quot;package.json&quot;">​</a></h2><p>script 里面有<a href="https://docs.npmjs.com/cli/v8/using-npm/scripts/#description" target="_blank" rel="noreferrer">生命周期钩子</a></p><div class="language-json"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;">scripts</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#676E95;font-style:italic;">// 限制使用pnpm和安装后初始化git-hooks</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">preinstall</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">npx only-allow pnpm</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">postinstall</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">simple-git-hooks</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">},</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;">simple-git-hooks</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">pre-commit</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">npx lint-staged</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">commit-msg</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">npx commitlint --edit </span><span style="color:#A6ACCD;">\\&quot;</span><span style="color:#C3E88D;">\${1}</span><span style="color:#A6ACCD;">\\&quot;</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#676E95;font-style:italic;">// 在使用pnpm的项目中使用 pnpm exec 执行比 npx 更合适</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#676E95;font-style:italic;">// &quot;pre-commit&quot;: &quot;pnpm exec lint-staged&quot;,</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#676E95;font-style:italic;">// &quot;commit-msg&quot;: &quot;pnpm exec commitlint --edit \\&quot;\${1}\\&quot;&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><h2 id="package-json-版本管理" tabindex="-1">package.json 版本管理 <a class="header-anchor" href="#package-json-版本管理" aria-label="Permalink to &quot;package.json 版本管理&quot;">​</a></h2><blockquote><p>npm version [xxxx] -m&quot;可以提交消息&quot; 如果当前已经有 git 库了,可能会失败.</p></blockquote><ul><li><code>npm version patch</code>     小改动,比如修复了一个 bug 之类的,版本号变动: 1.0.0-&gt;1.0.1</li><li><code>npm version minor</code>     增加新功能,不影响现有功能, 版本号变动: 1.0.0-&gt;1.1.0</li><li><code>npm version major</code>     破坏模块向后的兼容性, 版本号变动: 1.0.0-&gt;2.0.0</li></ul><p>详情查看: <a href="https://docs.npmjs.com/cli/v6/using-npm/semver" target="_blank" rel="noreferrer">semver</a></p><h2 id="使用-cli-类型的包" tabindex="-1">使用 cli 类型的包 <a class="header-anchor" href="#使用-cli-类型的包" aria-label="Permalink to &quot;使用 cli 类型的包&quot;">​</a></h2><blockquote><p>create-xxx 的 npm 包(例如<code>create-vite</code>), 可以直接通过下面这种方式使用:</p></blockquote><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">npm</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">create</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">xxx@latest</span></span>
<span class="line"><span style="color:#FFCB6B;">yarn</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">create</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">xxx</span></span>
<span class="line"><span style="color:#FFCB6B;">pnpm</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">create</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">xxx</span></span></code></pre></div><h2 id="npm-源" tabindex="-1">NPM 源 <a class="header-anchor" href="#npm-源" aria-label="Permalink to &quot;NPM 源&quot;">​</a></h2><blockquote><p>建议使用 nrm 进行管理:</p></blockquote><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;"># 安装nrm</span></span>
<span class="line"><span style="color:#FFCB6B;">npm</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">i</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-g</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">nrm</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 查看所有源</span></span>
<span class="line"><span style="color:#FFCB6B;">nrm</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">ls</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 使用</span></span>
<span class="line"><span style="color:#FFCB6B;">nrm</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">use</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">taobao</span></span></code></pre></div><blockquote><p>手动设置:</p></blockquote><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;"># 淘宝源</span></span>
<span class="line"><span style="color:#FFCB6B;">npm</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">config</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">set</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">registry</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">https://registry.npm.taobao.org/</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 新版淘宝源</span></span>
<span class="line"><span style="color:#FFCB6B;">npm</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">config</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">set</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">registry</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">https://registry.npmmirror.com/</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># npmjs npm本源</span></span>
<span class="line"><span style="color:#FFCB6B;">npm</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">config</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">set</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">registry</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">https://registry.npmjs.org/</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 公司阿里云源</span></span></code></pre></div><h2 id="save-和-save-dev" tabindex="-1">--save 和--save-dev <a class="header-anchor" href="#save-和-save-dev" aria-label="Permalink to &quot;--save 和--save-dev&quot;">​</a></h2><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;"># --save 会把你下载的第三方包信息保存到 \`dependencies\`</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># --save-dev 会把你下载的第三方包保存到 \`devDependencies\`</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># ---------------------------------------------</span></span>
<span class="line"><span style="color:#FFCB6B;">npm</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">i</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">插件名</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">默认相当于</span><span style="color:#A6ACCD;">  </span><span style="color:#C3E88D;">npm</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">i</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">--save</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">插件名</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># ---------------------------------------------</span></span>
<span class="line"><span style="color:#FFCB6B;">yarn</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">add</span><span style="color:#A6ACCD;">          </span><span style="color:#676E95;font-style:italic;"># 会在  \`dependencies\`      中安装一个包</span></span>
<span class="line"><span style="color:#FFCB6B;">yarn</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">add</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-D/-dev</span><span style="color:#A6ACCD;">  </span><span style="color:#676E95;font-style:italic;"># 会在  \`devDependencies\`   中安装一个包</span></span></code></pre></div><h2 id="dependencies-和-devdependencies-区别" tabindex="-1">dependencies 和 devDependencies 区别 <a class="header-anchor" href="#dependencies-和-devdependencies-区别" aria-label="Permalink to &quot;dependencies 和 devDependencies 区别&quot;">​</a></h2><ul><li>dependencies： 里面的插件代表开发打包后也会要用 <ul><li>直接 npm i 就行了，因为 npm i 默认就是 --save</li><li>如果是 cnpm i 那么必须自己加 --save</li></ul></li><li>devDependencies ：开发时需要，正式上线不需要 <ul><li>所以对于这类插件，记得下载时一定要用 --save-dev 的命令</li></ul></li></ul><h2 id="常用包" tabindex="-1">常用包 <a class="header-anchor" href="#常用包" aria-label="Permalink to &quot;常用包&quot;">​</a></h2><h3 id="shelljs" tabindex="-1">shelljs <a class="header-anchor" href="#shelljs" aria-label="Permalink to &quot;shelljs&quot;">​</a></h3><blockquote><p>ShellJS 是基于 Node.js API 的 Unix shell 命令的可移植（Windows/Linux/OS X）实现。</p></blockquote><p>用于在 nodejs 中用代码使用 shell 命令</p><h3 id="ora" tabindex="-1">ora <a class="header-anchor" href="#ora" aria-label="Permalink to &quot;ora&quot;">​</a></h3><p>一个命令行加载中状态工具</p><div class="language-JavaScript"><button title="Copy Code" class="copy"></button><span class="lang">JavaScript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> spinner </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">ora</span><span style="color:#A6ACCD;">(str)</span></span>
<span class="line"><span style="color:#A6ACCD;">spinner</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">start</span><span style="color:#A6ACCD;">()</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">spinner</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">stop</span><span style="color:#A6ACCD;">()</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">spinner</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">succeed</span><span style="color:#A6ACCD;">()</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">spinner</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">fail</span><span style="color:#A6ACCD;">()</span><span style="color:#89DDFF;">;</span></span></code></pre></div><h3 id="patch-package" tabindex="-1">patch-package <a class="header-anchor" href="#patch-package" aria-label="Permalink to &quot;patch-package&quot;">​</a></h3><p>当某个第三方包出现漏洞无法及时修复, 只能自己手动更改第三方包解决问题时, 会存在团队间的协作问题, 你的改动需要同步到所有团队成员, 这个时候可以使用 patch-package 这个包处理!</p><h3 id="prompts" tabindex="-1">prompts <a class="header-anchor" href="#prompts" aria-label="Permalink to &quot;prompts&quot;">​</a></h3><p>一个简洁的命令行交互工具</p><h3 id="minimist" tabindex="-1">minimist <a class="header-anchor" href="#minimist" aria-label="Permalink to &quot;minimist&quot;">​</a></h3><p>一个获取命令行参数的工具</p><h3 id="kolorist" tabindex="-1">kolorist <a class="header-anchor" href="#kolorist" aria-label="Permalink to &quot;kolorist&quot;">​</a></h3><p>将颜色放入标准输入/标准输出的微型库</p><h3 id="metalsmith" tabindex="-1">metalsmith <a class="header-anchor" href="#metalsmith" aria-label="Permalink to &quot;metalsmith&quot;">​</a></h3><p>在 cli 中, 被用作遍历文件夹, 找到需要渲染的模板</p><h3 id="cross-spawn" tabindex="-1">cross-spawn <a class="header-anchor" href="#cross-spawn" aria-label="Permalink to &quot;cross-spawn&quot;">​</a></h3><p>nodejs 上使用多进程, nodejs 的 spawn 和 spawnSync 的跨平台解决方案。</p><h3 id="vue3-自动导入" tabindex="-1">vue3 自动导入 <a class="header-anchor" href="#vue3-自动导入" aria-label="Permalink to &quot;vue3 自动导入&quot;">​</a></h3><blockquote><p>Auto import APIs on-demand for Vite, Webpack, Rollup and esbuild. With TypeScript support. Powered by <a href="https://github.com/unjs/unplugin" target="_blank" rel="noreferrer">unplugin</a>.</p></blockquote><p>安装</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">pnpm</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">add</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">unplugin-auto-import</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">unplugin-vue-components</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-D</span></span></code></pre></div><p>使用</p><ul><li>支持 vite, webpack,rollup, esbuild 等</li><li>vite 示例:</li></ul><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">// vite.config.ts</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> AutoImport </span><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">unplugin-auto-import/vite</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> Components </span><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">unplugin-vue-components/vite</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">// AntDesignVueResolver,</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#A6ACCD;">ElementPlusResolver</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">// VantResolver,</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">unplugin-vue-components/resolvers</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">export</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">default</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">defineConfig</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">plugins</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> [</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#82AAFF;">AutoImport</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#F07178;">imports</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> [</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">vue</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">vue-router</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">@vueuse/core</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">@vueuse/head</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">]</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#89DDFF;">      </span><span style="color:#676E95;font-style:italic;">// 指定 auto-import.d.ts 的位置</span></span>
<span class="line"><span style="color:#89DDFF;">      </span><span style="color:#676E95;font-style:italic;">// dts: &#39;./src/auto-import.d.ts&#39;,</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">,</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#82AAFF;">Components</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#F07178;">extensions</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> [</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">vue</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">md</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">]</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#F07178;">dts</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FF9CAC;">true</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#F07178;">include</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> [</span><span style="color:#89DDFF;">/</span><span style="color:#A6ACCD;">\\.</span><span style="color:#C3E88D;">vue</span><span style="color:#89DDFF;font-style:italic;">$</span><span style="color:#89DDFF;">/</span><span style="color:#89DDFF;">,</span><span style="color:#C3E88D;"> </span><span style="color:#89DDFF;">/</span><span style="color:#A6ACCD;">\\.</span><span style="color:#C3E88D;">vue</span><span style="color:#A6ACCD;">\\?</span><span style="color:#C3E88D;">vue</span><span style="color:#89DDFF;">/</span><span style="color:#89DDFF;">,</span><span style="color:#C3E88D;"> </span><span style="color:#89DDFF;">/</span><span style="color:#A6ACCD;">\\.</span><span style="color:#C3E88D;">md</span><span style="color:#89DDFF;font-style:italic;">$</span><span style="color:#89DDFF;">/</span><span style="color:#A6ACCD;">]</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#F07178;">resolvers</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> [</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#82AAFF;">ElementPlusResolver</span><span style="color:#A6ACCD;">()</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#89DDFF;">        </span><span style="color:#676E95;font-style:italic;">// IconsResolver({</span></span>
<span class="line"><span style="color:#89DDFF;">        </span><span style="color:#676E95;font-style:italic;">//   componentPrefix: &quot;&quot;,</span></span>
<span class="line"><span style="color:#89DDFF;">        </span><span style="color:#676E95;font-style:italic;">// }),</span></span>
<span class="line"><span style="color:#A6ACCD;">      ]</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">  ]</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span></code></pre></div><h2 id="pnpm" tabindex="-1">pnpm <a class="header-anchor" href="#pnpm" aria-label="Permalink to &quot;pnpm&quot;">​</a></h2><ul><li><code>--frozen-lockfile</code> 不更新 <code>pnpm-lock.yaml</code></li><li><code>--prod, -P</code> 代表生产环境只安装生产依赖</li></ul><h3 id="硬链接-软连接" tabindex="-1">硬链接/软连接 <a class="header-anchor" href="#硬链接-软连接" aria-label="Permalink to &quot;硬链接/软连接&quot;">​</a></h3><p>pnpm 使用硬链接和软链接来管理 Node.js 项目的依赖关系</p><ul><li>硬链接(hard link): <ul><li>是一个指向已存在文件的目录项(目录表中的一个记录)。所以一个文件可以有多个硬链接指向它。</li><li>删除一个硬链接不会影响其他硬链接和原文件,只有当所有硬链接都被删除后,文件的数据块才会被释放。</li><li>硬链接只能链接同一个文件系统中的文件。</li></ul></li><li>软链接(symbolic link): <ul><li>是一个特殊的文件,其内容存的是一个指向其他文件或目录的路径。</li><li>删除软链接不会影响被链接的原文件,删除原文件后软链接会指向不存在的文件,产生断链接。</li><li>软链接可以跨文件系统。</li></ul></li></ul><p>pnpm 使用硬链接来链接同一个依赖的多个副本, 以节省存储空间。使用软链接来链接跨项目的依赖。</p><h3 id="monorepo" tabindex="-1">monorepo <a class="header-anchor" href="#monorepo" aria-label="Permalink to &quot;monorepo&quot;">​</a></h3><blockquote><p>pnpm 的 monorepo 是将多个项目或包文件放到一个 git 仓库中进行管理，多个项目中会有共享的代码，可以分包引用，而整个项目由根目录管理的 dependencies 加上多个 packages 组成，每个 package 也可以在自己的作用域引入自己的 dependencies 。</p></blockquote><p>使用场景:</p><ul><li>多个项目中有共享的代码，可以分包引用，减少代码冗余</li><li>可以把原本一个项目的多个模块拆分成多个 packages ，在 packages 之间相互引用，也可以单独发布成包，极大地解决了项目之间代码无法重用的痛点</li><li>在项目打包或者编译操作时也可重用一套配置，通吃所有 packages</li></ul><p>使用方式:</p><ol><li><p>在项目根目录下，创建一个 pnpm-workspace.yaml 文件，并设置 packages 属性，指定需要管理的 packages 文件夹</p><div class="language-yaml"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#F07178;">packages</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">packages/**</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">docs</span></span></code></pre></div></li><li><p>安装依赖 安装公共依赖：在根目录下安装公共依赖，例如 TypeScript，供所有 packages 使用，命令如下:</p><blockquote><p>-w or --workspace-root</p></blockquote><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">pnpm</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">install</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">typescript</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-D</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-w</span></span></code></pre></div><p>安装特定 packages 的依赖：例如安装 vue，命令如下：</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">pnpm</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">install</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">vue</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-r</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">--filter</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">需要安装该包的子包</span></span></code></pre></div><p>安装多个 packages 的依赖：例如安装 /tools，/server，/web 的依赖，命令如下：</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">pnpm</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">i</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">vue</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-r</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">--filter</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">tools</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">server</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">web</span></span></code></pre></div></li><li><p>在 packages 文件夹下创建各自的 package, 例如 server，tools，web</p><div class="language-yaml"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C3E88D;">├── packages</span></span>
<span class="line"><span style="color:#C3E88D;">│   ├── server</span></span>
<span class="line"><span style="color:#C3E88D;">│   ├── tools</span></span>
<span class="line"><span style="color:#C3E88D;">│   └── web</span></span></code></pre></div><p>在各自的 package 中引用公共依赖，例如在 web 中引用 TypeScript：</p><div class="language-yaml"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C3E88D;">├── node_modules</span></span>
<span class="line"><span style="color:#C3E88D;">│   ├── @types</span></span>
<span class="line"><span style="color:#C3E88D;">│   └── typescript -&gt; .pnpm/typescript@4.4.4/node_modules/typescript</span></span>
<span class="line"><span style="color:#C3E88D;">├── package.json</span></span>
<span class="line"><span style="color:#C3E88D;">├── packages</span></span>
<span class="line"><span style="color:#C3E88D;">│   ├── server</span></span>
<span class="line"><span style="color:#C3E88D;">│   ├── tools</span></span>
<span class="line"><span style="color:#C3E88D;">│   └── web</span></span>
<span class="line"><span style="color:#C3E88D;">├── pnpm-lock.yaml</span></span>
<span class="line"><span style="color:#C3E88D;">└── pnpm-workspace.yaml</span></span></code></pre></div><p>在 package 中引用其他 package 的依赖，例如在 server 中引用 web 中的 vue：</p><div class="language-vue"><button title="Copy Code" class="copy"></button><span class="lang">vue</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">import Vue from &#39;../web/node_modules/vue&#39;</span></span></code></pre></div></li><li><p>打包编译 打包编译公共依赖：例如编译 TypeScript，命令如下：</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">pnpm</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">tsc</span></span></code></pre></div></li></ol>`,58),e=[o];function t(c,r,i,y,D,C){return a(),n("div",null,e)}const d=s(p,[["render",t]]);export{A as __pageData,d as default};
