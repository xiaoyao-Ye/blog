import{_ as s,o as a,c as n,U as l}from"./chunks/framework.97dce334.js";const A=JSON.parse('{"title":"爬楼梯","description":"","frontmatter":{},"headers":[],"relativePath":"interview/leetCode/70.md","filePath":"interview/leetCode/70.md","lastUpdated":1700208924000}'),o={name:"interview/leetCode/70.md"},p=l(`<h1 id="爬楼梯" tabindex="-1">爬楼梯 <a class="header-anchor" href="#爬楼梯" aria-label="Permalink to &quot;爬楼梯&quot;">​</a></h1><blockquote><p>假设你正在爬楼梯。需要 <code>n</code> 阶你才能到达楼顶。 每次你可以爬 <code>1</code> 或 <code>2</code> 个台阶。你有多少种不同的方法可以爬到楼顶呢？</p></blockquote><p>示例 1：</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">输入：n = 2</span></span>
<span class="line"><span style="color:#A6ACCD;">输出：2</span></span>
<span class="line"><span style="color:#A6ACCD;">解释：有两种方法可以爬到楼顶。</span></span>
<span class="line"><span style="color:#A6ACCD;">1. 1 阶 + 1 阶</span></span>
<span class="line"><span style="color:#A6ACCD;">2. 2 阶</span></span></code></pre></div><p>示例 2：</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">输入：n = 3</span></span>
<span class="line"><span style="color:#A6ACCD;">输出：3</span></span>
<span class="line"><span style="color:#A6ACCD;">解释：有三种方法可以爬到楼顶。</span></span>
<span class="line"><span style="color:#A6ACCD;">1. 1 阶 + 1 阶 + 1 阶</span></span>
<span class="line"><span style="color:#A6ACCD;">2. 1 阶 + 2 阶</span></span>
<span class="line"><span style="color:#A6ACCD;">3. 2 阶 + 1 阶</span></span></code></pre></div><p>提示：</p><ul><li><code>1 &lt;= n &lt;= 45</code></li></ul><h2 id="思路" tabindex="-1">思路 <a class="header-anchor" href="#思路" aria-label="Permalink to &quot;思路&quot;">​</a></h2><blockquote><p>总结: 不管有 n 层最终都是只有 <code>n-1层+1步</code> + <code>n-2层+2步</code> 这两种爬楼梯的方式</p></blockquote><ul><li>爬 2 阶到楼顶的方法有(2 种): <code>1+1 || 2</code></li><li>爬 3 阶到楼顶的方法有(3 种): <code>1+1+1 || 1+2 || 2+1</code><ul><li>解析: 先爬 1 阶(1),1 到 3 有两阶也就是 2 种方法(<code>1+1+1</code> <code>1+2</code>) 先爬 2 阶(1+1 2),2 到 3 阶有一种方法(1+1+1(重复了不记录次数) <code>2+1</code>)</li></ul></li><li>爬 4 阶到楼顶的方法有(5 种): <code>1+1+1+1 || 1+2+1 || 2+1+1 || 1+1+2 || 2+2</code><ul><li>解析:</li><li>先爬 3 阶(3 种方法)这 3 种方法+1 都能到第 4 阶(<code>1+1+1+1</code> || <code>1+2+1</code> || <code>2+1+1</code>), 所以这里爬到 4 阶有 <code>3</code> 种方法</li><li>先爬 2 阶(2 种方法)这 2 种方法+2 都能到 4 阶(<code>1+1+2</code> || <code>2+2</code>),其中把 2 分解成 1+1 还会多一种 1+1+1+1(重复了不记录次数) 所以这里爬到 4 阶有 <code>2</code> 种方法</li><li>3 + 2 = <code>5</code></li></ul></li><li>爬 5 阶到楼顶的方法有(8 种): (第 4 阶 + 1) + (第 3 阶 + 2)</li><li>爬 6 阶到楼顶的方法有(8 种): (第 6 阶 - 1) + (第 6 阶 - 2)</li><li>爬 n 阶到楼顶的方法有: (第 n-1 阶) + (第 n-2 阶)</li></ul><h2 id="递归" tabindex="-1">递归 <a class="header-anchor" href="#递归" aria-label="Permalink to &quot;递归&quot;">​</a></h2><div class="language-TypeScript"><button title="Copy Code" class="copy"></button><span class="lang">TypeScript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">// 可能执行超时</span></span>
<span class="line"><span style="color:#C792EA;">function</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">climbStairs</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">n</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">number</span><span style="color:#89DDFF;">):</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">number</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#F07178;"> (</span><span style="color:#A6ACCD;">n</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&lt;=</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">3</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">n</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">climbStairs</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">n</span><span style="color:#89DDFF;">-</span><span style="color:#F78C6C;">1</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">+</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">climbStairs</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">n</span><span style="color:#89DDFF;">-</span><span style="color:#F78C6C;">2</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#89DDFF;">};</span></span></code></pre></div><h2 id="计数" tabindex="-1">计数 <a class="header-anchor" href="#计数" aria-label="Permalink to &quot;计数&quot;">​</a></h2><blockquote><p>从 1 阶开始记录所有阶数有几种方法, n 阶 = (n-1)的方法数量 + (n-2)的方法数量</p></blockquote><div class="language-TypeScript"><button title="Copy Code" class="copy"></button><span class="lang">TypeScript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">function</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">climbStairs</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">n</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">number</span><span style="color:#89DDFF;">):</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">number</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#C792EA;">let</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">arr</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> []</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#A6ACCD;">arr</span><span style="color:#F07178;">[</span><span style="color:#F78C6C;">1</span><span style="color:#F07178;">] </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#A6ACCD;">arr</span><span style="color:#F07178;">[</span><span style="color:#F78C6C;">2</span><span style="color:#F07178;">] </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">2</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;font-style:italic;">for</span><span style="color:#F07178;"> (</span><span style="color:#C792EA;">let</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">i</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">3</span><span style="color:#89DDFF;">;</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">i</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&lt;=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">n</span><span style="color:#89DDFF;">;</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">i</span><span style="color:#89DDFF;">++</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#A6ACCD;">arr</span><span style="color:#F07178;">[</span><span style="color:#A6ACCD;">i</span><span style="color:#F07178;">] </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">arr</span><span style="color:#F07178;">[</span><span style="color:#A6ACCD;">i</span><span style="color:#89DDFF;">-</span><span style="color:#F78C6C;">1</span><span style="color:#F07178;">] </span><span style="color:#89DDFF;">+</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">arr</span><span style="color:#F07178;">[</span><span style="color:#A6ACCD;">i</span><span style="color:#89DDFF;">-</span><span style="color:#F78C6C;">2</span><span style="color:#F07178;">]</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">arr</span><span style="color:#F07178;">[</span><span style="color:#A6ACCD;">n</span><span style="color:#F07178;">]</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">};</span></span></code></pre></div>`,16),e=[p];function c(t,r,y,F,i,C){return a(),n("div",null,e)}const d=s(o,[["render",c]]);export{A as __pageData,d as default};
