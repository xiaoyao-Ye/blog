import{_ as s,o as a,c as l,U as o}from"./chunks/framework.97dce334.js";const A=JSON.parse('{"title":"Docker","description":"","frontmatter":{},"headers":[],"relativePath":"other/docker.md","filePath":"other/docker.md","lastUpdated":1690280214000}'),n={name:"other/docker.md"},e=o(`<h1 id="docker" tabindex="-1">Docker <a class="header-anchor" href="#docker" aria-label="Permalink to &quot;Docker&quot;">​</a></h1><h2 id="docker-中常用命令" tabindex="-1">docker 中常用命令 <a class="header-anchor" href="#docker-中常用命令" aria-label="Permalink to &quot;docker 中常用命令&quot;">​</a></h2><ul><li>docker search xxx 查看 xxx 有哪些可用版本</li><li>docker pull 从一个 Docker 的仓库服务器下拉一个镜像或仓库</li><li>docker push 将一个镜像或者仓库推送到一个 Docker 的注册服务器</li><li>docker images 查看是否已安装了对应镜像</li><li>docker run 创建一个新容器，并在其中运行给定命令 <ul><li>-i 交互式操作。</li><li>-t 终端。</li><li>-d 进入后台运行, 想要进入容器需要使用指令 docker exec &lt;容器 ID&gt;</li><li>-p 映射容器内的网络端口到宿主机上</li><li>--name 指定容器名称 ?</li><li>-v /opt/docker_v/mysql/conf:/etc/mysql/conf.d 将主机/opt/docker_v/mysql/conf 目录挂载到容器的/etc/mysql/conf.d ?</li></ul></li><li>docker ps -a 查看所有容器</li><li>docker kill &lt;容器 ID&gt; 关闭一个运行中的容器 (包括进程和所有相关资源)；</li><li>docker stop &lt;容器 ID&gt; 停止一个容器</li><li>docker start &lt;容器 ID&gt; 启动一个已经停止的容器</li><li>docker restart 重启一个容器</li><li>docker rm 删除给定的若干个容器</li><li>docker rmi 删除给定的若干个容器</li><li>docker cp 在容器和本地宿主系统之间复制文件中；</li></ul><h2 id="docker-中运行-mysql" tabindex="-1">docker 中运行 mysql <a class="header-anchor" href="#docker-中运行-mysql" aria-label="Permalink to &quot;docker 中运行 mysql&quot;">​</a></h2><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">docker</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">pull</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">mysql:latest</span></span>
<span class="line"><span style="color:#FFCB6B;">docker</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">run</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">--name</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">xxx</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-p</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">3333</span><span style="color:#C3E88D;">:3306</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-e</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">MYSQL_ROOT_PASSWORD=</span><span style="color:#F78C6C;">123456</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-d</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">mysql</span></span>
<span class="line"><span style="color:#FFCB6B;">docker</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">exec</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-it</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">xxx/容器ID</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">bash</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;"># -it 提供交互式环境 bash 进入实例后启动 bash 程序</span></span>
<span class="line"><span style="color:#FFCB6B;">mysql</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-u</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">root</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-p</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;"># 登陆数据库</span></span>
<span class="line"><span style="color:#FFCB6B;">create</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">database</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">mangosteen</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">charset=utf8</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;"># 新建数据库</span></span>
<span class="line"><span style="color:#82AAFF;">exit</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;"># 退出数据库&amp;宿主机</span></span></code></pre></div><h2 id="docker-容器中-mysql-时区问题" tabindex="-1">docker 容器中 mysql 时区问题 <a class="header-anchor" href="#docker-容器中-mysql-时区问题" aria-label="Permalink to &quot;docker 容器中 mysql 时区问题&quot;">​</a></h2><blockquote><p>docker 中运行 mysql 默认时区就是 UTC</p></blockquote><ol><li>新启动一个容器的话, 只要在启动容器的时候带上参数即可: <code>-e TZ=Asia/Shanghai</code></li><li>已启动的容器需要修改配置(重启才能生效--永久有效)</li></ol><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">date</span></span>
<span class="line"><span style="color:#FFCB6B;">ln</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-sf</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">/usr/share/zoneinfo/Shanghai</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">/etc/localtime</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 退出重启docker</span></span>
<span class="line"><span style="color:#82AAFF;">exit</span></span>
<span class="line"><span style="color:#FFCB6B;">docker</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">restart</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">容器ID</span></span></code></pre></div>`,9),p=[e];function t(c,r,i,C,y,d){return a(),l("div",null,p)}const k=s(n,[["render",t]]);export{A as __pageData,k as default};
