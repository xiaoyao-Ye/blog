import{_ as e,o as a,c as i,U as t}from"./chunks/framework.97dce334.js";const p=JSON.parse('{"title":"mini-react 副本","description":"","frontmatter":{},"headers":[],"relativePath":"Ghosteye/mini-react.md","filePath":"Ghosteye/mini-react.md","lastUpdated":1732711417000}'),r={name:"Ghosteye/mini-react.md"},l=t('<h1 id="mini-react-副本" tabindex="-1">mini-react 副本 <a class="header-anchor" href="#mini-react-副本" aria-label="Permalink to &quot;mini-react 副本&quot;">​</a></h1><p><a href="https://github.com/xiaoyao-Ye/mini-react" target="_blank" rel="noreferrer">项目地址: mini-react</a></p><p>挑战一周时间实现 300 多行代码的 Mini React, 收获如下:</p><h2 id="编程" tabindex="-1">编程 <a class="header-anchor" href="#编程" aria-label="Permalink to &quot;编程&quot;">​</a></h2><ul><li>程序就是数据结构加算法, 一个好的数据解构可以大大降低算法难度</li><li>遇到问题不着急, 细心的根据报错去思考可能是哪里导致的, 通过 <code>debugger</code> 辅助调试一步步找到<code>问题源</code>, 后面就简单了解决这个问题源就好了</li></ul><h2 id="认知" tabindex="-1">认知 <a class="header-anchor" href="#认知" aria-label="Permalink to &quot;认知&quot;">​</a></h2><ul><li>大脑的容量是有限的, 当遇到复杂的问题时, 能写下来的先写下来, 能画图的先画图, 通过这种方式去梳理问题会事半功倍.</li><li>任何事物都是由无数更小的单元组成的, 所以遇到任何问题只要拆分的足够小足够清晰, 难度也自然会降到最低.</li><li>当你要做一件事的时候, 最好是把其他不相关的都先放到一边.先把手上的事做好, 而不是贪多做了很多半成品.</li><li>程序不是一次性就能开发完成的, 需要在完成功能的过程中不断重构优化, 这样既便于后续维护也利于后续添加新功能.</li></ul><h2 id="想法" tabindex="-1">想法 <a class="header-anchor" href="#想法" aria-label="Permalink to &quot;想法&quot;">​</a></h2><ul><li>一直认为<code>学习能力</code>和<code>解决问题的能力</code>才是最重要的, 只要有这两项技能哪怕换行业也能很快上手</li><li>慢慢来就是最快的, 坚持每天一点点进步比心血来潮的想要提升会实在得多.</li><li>过程中得到的锻炼可能比完成这个项目的结果更重要, 因为学得技能是可复制的, 可以让以后的学习变得效率更好</li><li>在此推荐书籍《微习惯》《认知觉醒》《刻意练习》，书籍本身能够提高认知，但想要受用还得做到知行合一</li></ul>',9),o=[l];function c(n,d,s,h,_,m){return a(),i("div",null,o)}const f=e(r,[["render",c]]);export{p as __pageData,f as default};
