import{_ as s,o as a,c as n,U as p}from"./chunks/framework.97dce334.js";const l="/blog/initApi/api_mul.png",o="/blog/initApi/typings.png",e="/blog/initApi/workflow.png",u=JSON.parse('{"title":"前端快速创建 API 和类型定义","description":"","frontmatter":{},"headers":[],"relativePath":"Ghosteye/initapi.md","filePath":"Ghosteye/initapi.md","lastUpdated":1691077159000}'),t={name:"Ghosteye/initapi.md"},c=p('<h1 id="前端快速创建-api-和类型定义" tabindex="-1">前端快速创建 API 和类型定义 <a class="header-anchor" href="#前端快速创建-api-和类型定义" aria-label="Permalink to &quot;前端快速创建 API 和类型定义&quot;">​</a></h1><h2 id="介绍" tabindex="-1">介绍 <a class="header-anchor" href="#介绍" aria-label="Permalink to &quot;介绍&quot;">​</a></h2><p>在现代的软件开发中，创建和管理 API 是非常重要的一部分。</p><p>为了简化这个过程，并提高开发效率， 我造了一个轮子， 它提供了一种简单的方式来快速创建 API 并自动生成类型定义，让开发人员可以更轻松地进行 API 的设计和开发。</p><p>还能提供更好的代码可读性和可维护性。</p><p>如果你正在寻找一种简单而又高效的方式来创建 API， 我推荐你尝试一下。</p><p>项目链接：</p><p><a href="https://github.com/xiaoyao-Ye/initapi" target="_blank" rel="noreferrer">initapi(GitHub 地址)</a></p><p><a href="https://www.npmjs.com/package/initapi" target="_blank" rel="noreferrer">initapi(npm 地址)</a></p><p>创建结果展示:</p><p>API 文件示例 <img src="'+l+'" alt="Generate API Content Example"></p><p>类型 文件示例 <img src="'+o+`" alt="Generate Type Content Example"></p><h2 id="主要特性" tabindex="-1">主要特性 <a class="header-anchor" href="#主要特性" aria-label="Permalink to &quot;主要特性&quot;">​</a></h2><ul><li>快速创建 API：<code>initapi</code> 提供了一种简单的命令行界面，可以快速创建 API 文件并生成基本的请求函数。</li><li>自动生成类型定义：根据 API 结构和数据模型，自动生成 TypeScript 的 interface 和 type， 避免手动定义类型的繁琐工作。</li><li>类型安全：根据后端类型转换成前端的 TypeScript 类型，提高代码可靠性和类型安全性。</li><li>统一规范：功能放置位置一致，请求函数的创建方法一致，保持代码统一。</li><li>降低维护成本：后端接口变动后，只需重新生成函数代码，引用部分无需修改。</li></ul><h2 id="使用方式" tabindex="-1">使用方式 <a class="header-anchor" href="#使用方式" aria-label="Permalink to &quot;使用方式&quot;">​</a></h2><blockquote><p>这里只介绍最简单的使用方式， 可前往 <a href="https://github.com/xiaoyao-Ye/initapi" target="_blank" rel="noreferrer">initapi</a> 查看更多可自定义内容</p></blockquote><p>安装:</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">npm</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">i</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">initapi</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-D</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># or</span></span>
<span class="line"><span style="color:#FFCB6B;">pnpm</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">i</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">initapi</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-D</span></span></code></pre></div><p>使用:</p><p>创建并配置 <code>api.config.ts</code> or <code>api.config.js</code>:</p><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">defineConfig</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">initapi</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">export</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">default</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">defineConfig</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">service</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">// 后端有几个服务就配置几个</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">// 服务名称-创建API时文件夹的名称会使用此命名</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">pets</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">      </span><span style="color:#676E95;font-style:italic;">// API接口文档的json文件地址(这里借用swagger官方公开的作为示例) 可以设置远程也可以设置本地相对路径</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#F07178;">url</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">https://petstore.swagger.io/v2/swagger.json</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">},</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">},</span></span>
<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">// API 文件输出目录</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">outputDir</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">./src/api</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span></span></code></pre></div><p>package.json:</p><div class="language-json"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">scripts</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">: </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;">api</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">initapi create</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#676E95;font-style:italic;">// ...</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">,</span></span></code></pre></div><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">npm</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">run</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">api</span></span></code></pre></div><p>创建成功示例 <img src="`+e+'" alt="Generate success Example"></p><h2 id="最后" tabindex="-1">最后 <a class="header-anchor" href="#最后" aria-label="Permalink to &quot;最后&quot;">​</a></h2><p>感谢您的支持和参与！如果有任何问题或需要进一步的帮助，请随时提问。我们非常欢迎您使用、关注、点赞、提交问题和发起合并请求！谢谢！😊</p><p>项目链接：</p><p><a href="https://github.com/xiaoyao-Ye/initapi" target="_blank" rel="noreferrer">initapi(GitHub 地址)</a></p><p><a href="https://www.npmjs.com/package/initapi" target="_blank" rel="noreferrer">initapi(npm 地址)</a></p>',30),r=[c];function i(y,D,C,F,A,h){return a(),n("div",null,r)}const g=s(t,[["render",i]]);export{u as __pageData,g as default};
